package orion.bosen.task;

enum TableDepType {
  // The function reads and writes to a pre-determined partition
  // of the table; the partitioning guarantees that concurrent
  // running instances of the function don't access the same partition
  PIPELINED = 1;
  // The function reads and/or writes to arbitrary records in the table
  RANDOM_ACCESS = 2;
}

enum ReadWrite {
  READ_ONLY = 1;
  WRITE_ONLY =  2;
  READ_WRITE = 3;
}

message TableDep {
  required int32 table_id = 1;
  required TableDepType dep_type = 2;
  required ReadWrite read_write = 3;
  optional string function_compute_dep = 4;
}

enum Repetition {
  ONE_PARTITION = 1;
  ALL_LOCAL_PARTITIONS = 2;
  ALL_PARTITIONS = 3;
}

enum PartitionScheme {
  STATIC = 1;
  DYNAMIC = 2;
  RANDOM = 3;
}

message ConcreteBaseTable {
  required int32 table_id = 1;
  required PartitionScheme partition_scheme = 2;
  optional uint64 partition_size = 3;
}

message VirtualBaseTable {
  required uint64 size = 1;
}

enum BaseTableType {
  VIRTUAL = 1;
  CONCRETE = 2;
}

message CallFunc {
  required string function_name = 1;
  required BaseTableType base_table_type = 2;
  optional VirtualBaseTable virtual_base_table = 3;
  optional ConcreteBaseTable concrete_base_table = 4;
  repeated TableDep deps = 5;
  required Repetition repetition = 6;
  required uint64 num_iterations = 7;
  required int32 result_type = 8;
}

enum DistArrayParentType {
  TEXT_FILE = 1;
  DIST_ARRAY = 2;
  INIT = 3;
}

enum DistArrayInitType {
  EMPTY = 1;
  UNIFORM_RANDOM = 2;
  NORMAL_RANDOM = 3;
}

enum DistArrayMapType {
  NO_MAP = 1;
  MAP = 2;
  MAP_FIXED_KEYS = 3;
  MAP_VALUES = 4;
  MAP_VALUES_NEW_KEYS = 5;
}

message CreateDistArray {
  required int32 id = 1;
  required DistArrayParentType parent_type = 2;
  required DistArrayMapType map_type = 3;
  required bool flatten_results = 4;
  required uint64 num_dims = 5;
  required int32 value_type = 6;
  optional string file_path = 7;
  optional int32 parent_id = 8;
  optional DistArrayInitType init_type = 9;
  optional int32 mapper_func_module = 10;
  optional string mapper_func_name = 11;
  repeated int64 dims = 12;
  optional int32 random_init_type = 13; // used only if map is ture with random init
}

message EvalExpr {
  required bytes serialized_expr = 1;
  required int32 module = 2;
}

message DefineVar {
  required string var_name = 1;
  required bytes var_value = 2;
}

message SpaceTimeRepartitionDistArray {
  required int32 id = 1;
  required string partition_func_name = 2;
}

//message Map {
//  required int32 src_table = 1;
//  required int32 dst_table = 2;
//  required bytes code = 3;
//}

//message Shuffle {
//  required int32 src_table = 1;
//  required bytes code = 2;
//}