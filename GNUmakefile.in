ORION_HOME := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))
AR = ar
CC = gcc
CXX = g++-5 -std=c++14

ifeq (@JULIA_HOME@,)
$(error JULIA_HOME is not set)
endif

ifeq (@DEBUG_ON@,true)
DFLAGS = -g -O0
else
DFLAGS = -O3
endif

ifeq (@PERF_COUNT_ON@,true)
PERF_COUNT_ON_FLAGS = -DORION_PERF_COUNT
endif

# use -Wno-deprecated-declarations to turn off warnings from boost w/ g++-5
CFLAGS = $(DFLAGS) -fPIC $(PERF_COUNT_ON_FLAGS) \
	-W -Wall -Werror -Wno-sign-compare \
	-fno-builtin-malloc \
	-fno-builtin-calloc \
	-fno-builtin-realloc \
	-fno-builtin-free \
	-Wno-unused-parameter

JULIA_HOME=@JULIA_HOME@

LIBS = -lgtest \
	-lglog \
	-lgflags \
	-lnuma \
	-lpthread \
	-lm \
	-lcblas \
	-lprotobuf \
	-ltcmalloc

ifeq (@SANITIZER_ON@,address)
SANITIZER_FLAGS = -fsanitize=address
CFLAGS += -fno-omit-frame-pointer
endif

ifeq (@SANITIZER_ON@,thread)
SANITIZER_FLAGS = -fsanitize=thread
endif

CFLAGS += -I$(ORION_HOME)/include -I$(JULIA_HOME)/usr/include -I$(JULIA_HOME)/src -I$(JULIA_HOME)/src/support
CFLAGS += -I$(ORION_HOME)/deps/include

CFLAGS += -DJULIA_ENABLE_THREADING=1 -DJULIA_INIT_DIR=\"$(JULIA_HOME)/usr/lib\"
LDFLAGS = -Wl,-rpath,$(ORION_HOME)/lib/ -L$(ORION_HOME)/lib
LDFLAGS += -Wl,-rpath,$(JULIA_HOME)/usr/lib -L$(JULIA_HOME)/usr/lib

ifneq (@HADOOP_HOME@,)
CFLAGS += -DORION_USE_HDFS
CFLAGS += -I@HADOOP_HOME@/include
LDFLAGS += -Wl,-rpath,@HADOOP_HOME@/lib/native -L@HADOOP_HOME@/lib/native \
-Wl,-rpath,@JAVA_HOME@/jre/lib/amd64/server -L@JAVA_HOME@/jre/lib/amd64/server
LIBS += -lhdfs -ljvm
endif

ifeq (@GPROF_ON@,true)
CFLAGS += -pg
LIBS += -pg
endif

ifeq (@GOOGLE_PROF_ON@,true)
LIBS += -lprofiler
endif

ifeq (@SANITIZER_ON@,none)
ORION_LIB_LINKER_LIBS = $(LIBS)
endif

LIBS += -ljulia

ORION_LIB_NAME := orion
ORION_DRIVER_LIB_NAME := orion_driver

ORION_LIB := lib/lib$(ORION_LIB_NAME).so
ORION_DRIVER_LIB := lib/lib$(ORION_DRIVER_LIB_NAME).so

orion_lib: $(ORION_LIB) $(ORION_DRIVER_LIB)

include deps/deps.mk
include src/bosen/bosen.mk

$(ORION_LIB): lib $(BOSEN_LIB_OBJ) $(BOSEN_LIB_COBJ) $(BOSEN_PROTO_OBJ)
	gcc -shared -Wl,-soname,lib$(ORION_LIB_NAME).so.0 -o lib$(ORION_LIB_NAME).so.0.0 \
		$(BOSEN_LIB_OBJ) $(BOSEN_LIB_COBJ) $(BOSEN_PROTO_OBJ) \
		$(ORION_LIB_LINKER_LIBS) $(LDFLAGS)
	mv lib$(ORION_LIB_NAME).so.0.0 lib/
	ln -sf $(ORION_HOME)/lib/lib$(ORION_LIB_NAME).so.0.0 $(ORION_HOME)/lib/lib$(ORION_LIB_NAME).so.0
	ln -sf $(ORION_HOME)/lib/lib$(ORION_LIB_NAME).so.0.0 $(ORION_HOME)/$@

$(ORION_DRIVER_LIB): lib $(DRIVER_LIB_OBJ) $(DRIVER_LIB_COBJ) $(DRIVER_LIB_PROTO_OBJ)
	gcc -shared -Wl,-soname,lib$(ORION_DRIVER_LIB_NAME).so.0 -o lib$(ORION_DRIVER_LIB_NAME).so.0.0 \
		$(DRIVER_LIB_OBJ) $(DRIVER_LIB_COBJ) $(DRIVER_LIB_PROTO_OBJ) \
		$(LIBS) $(LDFLAGS)
	mv lib$(ORION_DRIVER_LIB_NAME).so.0.0 lib/
	ln -sf $(ORION_HOME)/lib/lib$(ORION_DRIVER_LIB_NAME).so.0.0 $(ORION_HOME)/lib/lib$(ORION_DRIVER_LIB_NAME).so.0
	ln -sf $(ORION_HOME)/lib/lib$(ORION_DRIVER_LIB_NAME).so.0.0 $(ORION_HOME)/$@

all: bosen_exe bosen_test orion_lib

bin:
	mkdir -p bin
lib:
	mkdir -p lib

clean: bosen_clean
	rm -rf lib

dist_clean: clean deps_clean

.PHONY: bosen_exe orion_lib
