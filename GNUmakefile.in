ORION_HOME := $(abspath $(dir $(lastword $(MAKEFILE_LIST))))
AR = ar
CC = gcc
CXX = g++ -std=c++14

ifeq (@DEBUG_ON@,true)
DFLAGS = -g -O0
else
DFLAGS = -O3
endif

ifeq (@PERF_COUNT_ON@,true)
PERF_COUNT_ON_FLAGS = -DORION_PERF_COUNT
endif

# use -Wno-deprecated-declarations to turn off warnings from boost w/ g++-5
CFLAGS = $(DFLAGS) $(SANITIZER_FLAGS) $(PERF_COUNT_ON_FLAGS) \
	-W -Wall -Werror -Wno-sign-compare \
	-Wno-unused-parameter -fno-builtin-malloc -fno-builtin-calloc \
	-fno-builtin-realloc -fno-builtin-free \
	-I@THIRD_PARTY_HOME@/include -Iinclude/

LIBS = -lnuma \
	-lpthread \
	-lm \
	-lglog \
	-lgflags \
	-ltcmalloc \
	-lcblas

ifeq (@SANITIZER_ON@,address)
SANITIZER_FLAGS += -fsanitize=address -fno-omit-frame-pointer
LIBS += -lasan
endif

LDFLAGS = -Wl,-rpath,@THIRD_PARTY_HOME@/lib/ -L@THIRD_PARTY_HOME@/lib \
	-Wl,-rpath,$(ORION_HOME)/lib/ -L$(ORION_HOME)/lib

ifneq (@HADOOP_HOME@,)
CFLAGS += -I@HADOOP_HOME@/include
LDFLAGS += -Wl,-rpath,@HADOOP_HOME@/lib/native -L@HADOOP_HOME@/lib/native \
-Wl,-rpath,@JAVA_LIB_HOME@ -L@JAVA_LIB_HOME@
LIBS += -lhdfs -ljvm
endif

all: orion_lib bosen_exe support_exe build_apps

ORION_LIB_NAME := orion

ORION_LIB := lib/lib$(ORION_LIB_NAME).so

orion_lib: $(ORION_LIB)

include src/support/support.mk
include src/bosen/bosen.mk

bin:
	mkdir -p bin
lib:
	mkdir -p lib

$(ORION_LIB): lib $(BOSEN_LIB_OBJ) $(SUPPORT_LIB_OBJ)
	gcc -shared -Wl,-soname,liborion.so.0 -o liborion.so.0.0 $(BOSEN_LIB_OBJ) $(SUPPORT_LIB_OBJ)
	mv liborion.so.0.0 lib/
	ln -sf $(ORION_HOME)/lib/liborion.so.0.0 $(ORION_HOME)/lib/liborion.so.0
	ln -sf $(ORION_HOME)/lib/liborion.so.0.0 $(ORION_HOME)/$@

clean: clean_apps support_clean bosen_clean
	rm -rf bin lib

# compling applications
APPS := $(patsubst apps/%,%,\
	$(shell find apps -regextype posix-extended -type d \
	-regex 'apps\/([a-z]|[A-Z])+'))

build_apps: $(APPS)

$(APPS): % : orion_lib
	@echo "building $@"
	mkdir -p apps/$@/bin
	$(CXX) $(CFLAGS) apps/$@/gen_src/driver.cpp \
	$(LDFLAGS) $(LIBS) -l$(ORION_LIB_NAME) -o apps/$@/bin/driver
	$(CXX) $(CFLAGS) apps/$@/gen_src/worker.cpp \
	$(LDFLAGS) -Llib $(LIBS) -l$(ORION_LIB_NAME) -o apps/$@/bin/worker

clean_apps:
	rm -rf apps/*/bin

.PHONY: bosen_exe compiler_exe codegen_exe support_exe orion_lib \
	clean_apps support_clean bosen_clean
